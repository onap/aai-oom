# Copyright Â© 2018 Amdocs, AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#################################################################
# Global configuration defaults.
#################################################################
global:
  readinessImage: readiness-check:2.0.2
  loggingImage: beats/filebeat:5.5.0

#################################################################
# Application configuration defaults.
#################################################################

# application image
image: onap/spike:1.4.0
flavor: small

initContainers:
  containerList:
    - message-router-kafka

configMaps:
  - name: '{{ include "common.fullname" . }}-configmap'
    filePath: "resources/config/*"
  - name: '{{ include "common.fullname" . }}-edge-props-configmap'
    filePath: "resources/config/model/edge_props/*"

secrets:
  - name: '{{ include "common.fullname" . }}-spike-secrets'
    filePath: "resources/config/auth/*"
  - name: '{{ include "common.fullname" . }}-pass'
    envs:
      - name: KEY_STORE_PASSWORD
        value: '{{ .Values.config.keyStorePassword | b64enc | quote }}'
      - name: KEY_MANAGER_PASSWORD
        value: '{{ .Values.config.keyManagerPassword | b64enc | quote }}'

envs:
  - name: CONFIG_HOME
    value: /opt/app/spike/config
  - name: KEY_STORE_PASSWORD
    valueFrom:
      secretKeyRef:
        name: '{{ template "common.fullname" . }}-pass'
        key: KEY_STORE_PASSWORD
  - name: KEY_MANAGER_PASSWORD
    valueFrom:
      secretKeyRef:
        name: '{{ template "common.fullname" . }}-pass'
        key: KEY_MANAGER_PASSWORD
  - name: SERVICE_BEANS
    value: /opt/app/spike/dynamic/conf

volumeMounts:
  - mountPath: /opt/app/spike/config/auth
    name: '{{ include "common.fullname" . }}-secrets'
  - mountPath: /opt/app/spike/dynamic/conf/spike-beans.xml
    name: '{{ include "common.fullname" . }}-config'
    subPath: spike-beans.xml
  - mountPath: /opt/app/spike/config/spike.properties
    subPath: spike.properties
    name: '{{ include "common.fullname" . }}-config'
  - mountPath: /opt/app/spike/config/schema-ingest.properties
    subPath: schema-ingest.properties
    name: '{{ include "common.fullname" . }}-config'
  - mountPath: /opt/app/spike/config/edgeprops-ingest.properties
    subPath: edgeprops-ingest.properties
    name: '{{ include "common.fullname" . }}-config'
  - mountPath: /opt/app/spike/config/model/edge_props
    name: '{{ include "common.fullname" . }}-edge-props-config'
  - mountPath: /opt/app/spike/bundleconfig/etc/logback.xml
    name: '{{ include "common.fullname" . }}-config'
    subPath: logback.xml
  - mountPath: /var/log/onap
    name: '{{ include "common.fullname" . }}-logs'

volumes:
  - volumeMountRefName: '{{ include "common.fullname" . }}-secrets'
    type: secret
    name: '{{ include "common.fullname" . }}-spike-secrets'
  - volumeMountRefName: '{{ include "common.fullname" . }}-config'
    type: configMap
    name: '{{ include "common.fullname" . }}-configmap'
  - volumeMountRefName: '{{ include "common.fullname" . }}-edge-props-config'
    type: configMap
    name: '{{ include "common.fullname" . }}-edge-props-configmap'
  - volumeMountRefName: filebeat-conf
    type: configMap
    name: aai-filebeat
  - volumeMountRefName: '{{ include "common.fullname" . }}-logs'
    type: emptyDir
  - volumeMountRefName: '{{ include "common.fullname" . }}-filebeat'

    type: emptyDir

sideCarContainers:
  - name: filebeat-onap
    image: '{{ .Values.global.loggingRepository }}/{{ .Values.global.loggingImage }}'
    imagePullPolicy: '{{ .Values.global.pullPolicy | default .Values.pullPolicy }}'
    volumeMounts:
      - mountPath: /usr/share/filebeat/filebeat.yml
        subPath: filebeat.yml
        name: filebeat-conf
      - mountPath: /var/log/onap
        name: '{{ include "common.fullname" . }}-logs'
      - mountPath: /usr/share/filebeat/data
        name: '{{ include "common.fullname" . }}-filebeat'

# application configuration
config:
  keyStorePassword: OBF:1y0q1uvc1uum1uvg1pil1pjl1uuq1uvk1uuu1y10
  keyManagerPassword: OBF:1y0q1uvc1uum1uvg1pil1pjl1uuq1uvk1uuu1y10

# default number of instances
replicaCount: 1

nodeSelector: {}

affinity: {}

# probe configuration parameters
liveness:
  initialDelaySeconds: 10
  periodSeconds: 10
  # necessary to disable liveness probe when setting breakpoints
  # in debugger so K8s doesn't restart unresponsive container
  enabled: false

readiness:
  initialDelaySeconds: 10
  periodSeconds: 10

service:
  type: NodePort
  portName: spike
  externalPort: 9518
  internalPort: 9518
  nodePort: 39

ingress:
  enabled: false

resources:
  small:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 0.5
      memory: 1Gi
  large:
    limits:
      cpu: 4
      memory: 8Gi
    requests:
      cpu: 1
      memory: 1536Mi
  unlimited: {}

# XML bean configuration
event:
  port:
    dmaap: 3905
  protocol: https
  consumer:
    topic: champRawEvents
  publisher:
    topic: spikeEvents
