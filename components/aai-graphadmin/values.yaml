#
# ============LICENSE_START=======================================================
# org.onap.aai
# ================================================================================
# Copyright Â© 2018 AT&T Intellectual Property. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ============LICENSE_END=========================================================

# Default values for resources.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
global: # global defaults
  nodePortPrefix: 302
  readinessRepository: oomk8s
  readinessImage: readiness-check:2.0.2


# application image
repository: nexus3.onap.org:10001
image: onap/aai-graphadmin:1.6.3
pullPolicy: Always
restartPolicy: Always
flavor: small
# default number of instances
replicaCount: 1

# Configuration for the graphadmin deployment
config:

  # Specify the profiles for the graphadmin microservice
  profiles:
    active: "dmaap,one-way-ssl"

  # Specifies the timeout limit for the REST API requests
  timeout:
    enabled: true
    limit: 180000

  # Default maximum records to fix for the data grooming and dupeTool
  maxFix:
    dataGrooming: 150
    dupeTool: 25

  # Default number of sleep minutes for dataGrooming and dupeTool
  sleepMinutes:
    dataGrooming: 7
    dupeTool: 7

  # Cron specific attributes to be triggered for the graphadmin spring cron tasks
  cron:
    # Specifies that the data grooming tool which runs duplicates should be enabled
    dataGrooming:
      enabled: true
    # Specifies that the data snapshot which takes a graphson snapshot should be enabled
    dataSnapshot:
      enabled: true
      params: JUST_TAKE_SNAPSHOT

    # Data cleanup which zips snapshots older than x days and deletes older than y days
    dataCleanup:

      dataGrooming:
        enabled: true
        # Zips up the dataGrooming files older than 5 days
        ageZip: 5
        # Deletes the dataGrooming files older than 30 days
        ageDelete: 30

      dataSnapshot:
        enabled: true
        # Zips up the dataSnapshot graphson files older than 5 days
        ageZip: 5
        # Deletes the dataSnapshot graphson files older than 30 days
        ageDelete: 30

nodeSelector: {}

affinity: {}

# probe configuration parameters
liveness:
  initialDelaySeconds: 60
  periodSeconds: 60
  # necessary to disable liveness probe when setting breakpoints
  # in debugger so K8s doesn't restart unresponsive container
  enabled: false

readiness:
  initialDelaySeconds: 60
  periodSeconds: 10

service:
  type: ClusterIP
  # REST API port for the graphadmin microservice
  portName: aai-graphadmin-8449
  internalPort: 8449
  portName2: aai-graphadmin-5005
  internalPort2: 5005

ingress:
  enabled: false

persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## Requires persistence.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  # existingClaim:
  volumeReclaimPolicy: Retain
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  accessMode: ReadWriteMany
  size: 2Gi

  mountPath: /dockerdata-nfs
  mountSubPath: aai/aai-graphadmin
  mountSubPath1: aai/migration

logback:
  rootLogLevel: {{ .Values.global.logback.rootLogLevel.graphadmin }}
  logger:
    ajsc: {{ .Values.global.logback.logger.ajsc }}
    ajscBeansInterceptors: {{ .Values.global.logback.logger.ajscBeansInterceptors }}
    ajscComputeService: {{ .Values.global.logback.logger.ajscComputeService }}
    ajscFilePersistenceService: {{ .Values.global.logback.logger.ajscFilePersistenceService }}
    ajscFilters: {{ .Values.global.logback.logger.ajscFilters }}
    ajscLoggingConfigurationService: {{ .Values.global.logback.logger.ajscLoggingConfigurationService }}
    ajscRestlet: {{ .Values.global.logback.logger.ajscRestlet }}
    ajscRouteMgmtService: {{ .Values.global.logback.logger.ajscRouteMgmtService }}
    ajscServlet: {{ .Values.global.logback.logger.ajscServlet }}
    ajscUserDefinedBeansDefService: {{ .Values.global.logback.logger.ajscUserDefinedBeansDefService }}
    ajscUserDefinedJarService: {{ .Values.global.logback.logger.ajscUserDefinedJarService }}
    ajscUtils: {{ .Values.global.logback.logger.ajscUtils }}
    ajscUtilsDME2Helper: {{ .Values.global.logback.logger.ajscUtilsDME2Helper }}
    ajscVandelayService: {{ .Values.global.logback.logger.ajscVandelayService }}
    apache: {{ .Values.global.logback.logger.apache }}
    apacheCamel: {{ .Values.global.logback.logger.apacheCamel }}
    apacheCamelComponentRestlet: {{ .Values.global.logback.logger.apacheCamelComponentRestlet }}
    apacheCamelProcessorInterceptor: {{ .Values.global.logback.logger.apacheCamelProcessorInterceptor }}
    apacheCommons: {{ .Values.global.logback.logger.apacheCommons }}
    apacheCommonsHttpclient: {{ .Values.global.logback.logger.apacheCommonsHttpclient }}
    apacheCoyote: {{ .Values.global.logback.logger.apacheCoyote }}
    apacheCxf: {{ .Values.global.logback.logger.apacheCxf }}
    apacheCxfJaxrsInterceptor: {{ .Values.global.logback.logger.apacheCxfJaxrsInterceptor }}
    apacheCxfService: {{ .Values.global.logback.logger.apacheCxfService }}
    apacheJasper: {{ .Values.global.logback.logger.apacheJasper }}
    apacheZookeeper: {{ .Values.global.logback.logger.apacheZookeeper }}
    attAftDme2: {{ .Values.global.logback.logger.attAftDme2 }}
    attAjsc: {{ .Values.global.logback.logger.attAjsc }}
    attAjscCsiLogging: {{ .Values.global.logback.logger.attAjscCsiLogging }}
    attAjscFilemonitor: {{ .Values.global.logback.logger.attAjscFilemonitor }}
    attEelf: {{ .Values.global.logback.logger.attEelf }}
    attScamper: {{ .Values.global.logback.logger.attScamper }}
    auditRecord: {{ .Values.global.logback.logger.auditRecord }}
    auditRecordDirectCall: {{ .Values.global.logback.logger.auditRecordDirectCall }}
    blogSpringJms: {{ .Values.global.logback.logger.blogSpringJms }}
    codehausGroovy: {{ .Values.global.logback.logger.codehausGroovy }}
    eclipseJetty: {{ .Values.global.logback.logger.eclipseJetty }}
    hibernate: {{ .Values.global.logback.logger.hibernate }}
    hibernateEjb: {{ .Values.global.logback.logger.hibernateEjb }}
    hibernateValidator: {{ .Values.global.logback.logger.hibernateValidator }}
    janusgraph: {{ .Values.global.logback.logger.janusgraph }}
    jaywayJsonpath: {{ .Values.global.logback.logger.jaywayJsonpath }}
    netflix: {{ .Values.global.logback.logger.netflix }}
    netflixLoadbalancer: {{ .Values.global.logback.logger.netflixLoadbalancer }}
    onapAai: {{ .Values.global.logback.logger.onapAai }}
    onapAaiAaf: {{ .Values.global.logback.logger.onapAaiAaf }}
    onapAaiAailogFilterRestClientLoggingInterceptor: {{ .Values.global.logback.logger.onapAaiAailogFilterRestClientLoggingInterceptor }}
    onapAaiAailogLogsAaiDBMetricLog: {{ .Values.global.logback.logger.onapAaiAailogLogsAaiDBMetricLog }}
    onapAaiAailogLogsAaiScheduledTaskAuditLog: {{ .Values.global.logback.logger.onapAaiAailogLogsAaiScheduledTaskAuditLog }}
    onapAaiDatacleanup: {{ .Values.global.logback.logger.onapAaiDatacleanup }}
    onapAaiDataexport: {{ .Values.global.logback.logger.onapAaiDataexport }}
    onapAaiDatagrooming: {{ .Values.global.logback.logger.onapAaiDatagrooming }}
    onapAaiDatasnapshot: {{ .Values.global.logback.logger.onapAaiDatasnapshot }}
    onapAaiDbgen: {{ .Values.global.logback.logger.onapAaiDbgen }}
    onapAaiDbgenDupeTool: {{ .Values.global.logback.logger.onapAaiDbgenDupeTool }}
    onapAaiDbgenDynamicPayloadGenerator: {{ .Values.global.logback.logger.onapAaiDbgenDynamicPayloadGenerator }}
    onapAaiDmaap: {{ .Values.global.logback.logger.onapAaiDmaap }}
    onapAaiHistorytruncate: {{ .Values.global.logback.logger.onapAaiHistorytruncate }}
    onapAaiInterceptorsPost: {{ .Values.global.logback.logger.onapAaiInterceptorsPost }}
    onapAaiLoggingErrorLogHelper: {{ .Values.global.logback.logger.onapAaiLoggingErrorLogHelper }}
    onapAaiMigration: {{ .Values.global.logback.logger.onapAaiMigration }}
    onapAaiSchema: {{ .Values.global.logback.logger.onapAaiSchema }}
    onapAaiUtilSendDeleteMigrationNotifications: {{ .Values.global.logback.logger.onapAaiUtilSendDeleteMigrationNotifications }}
    onapAaiUtilSendMigrationNotifications: {{ .Values.global.logback.logger.onapAaiUtilSendMigrationNotifications }}
    onapLoggingFilterBaseAbstractAuditLogFilter: {{ .Values.global.logback.logger.onapLoggingFilterBaseAbstractAuditLogFilter }}
    onapLoggingFilterBaseAbstractMetricLogFilter: {{ .Values.global.logback.logger.onapLoggingFilterBaseAbstractMetricLogFilter }}
    perfTrackerRecord: {{ .Values.global.logback.logger.perfTrackerRecord }}
    qosLogbackClassic: {{ .Values.global.logback.logger.qosLogbackClassic }}
    qosLogbackCore: {{ .Values.global.logback.logger.qosLogbackCore }}
    restlet: {{ .Values.global.logback.logger.restlet }}
    sf: {{ .Values.global.logback.logger.sf }}
    springframework: {{ .Values.global.logback.logger.springframework }}
    springframeworkBeans: {{ .Values.global.logback.logger.springframeworkBeans }}
    springframeworkWeb: {{ .Values.global.logback.logger.springframeworkWeb }}
    zookeeper: {{ .Values.global.logback.logger.zookeeper }}

resources:
  small:
    limits:
      cpu: 2
      memory: 4Gi
    requests:
      cpu: 0.5
      memory: 1536Mi
  large:
    limits:
      cpu: 4
      memory: 8Gi
    requests:
      cpu: 1
      memory: 2Gi
  unlimited: {}
