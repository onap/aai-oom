# Copyright © 2019 Orange
# Modifications Copyright © 2018 AT&T
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ include "common.fullname" . }}
  namespace: {{ include "common.namespace" . }}
  labels:
    app: {{ include "common.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "common.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "common.name" . }}
        release: {{ .Release.Name }}
      name: {{ include "common.name" . }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      hostname: aai-graphgraph
      initContainers:
      - command:
        - /root/ready.py
        args:
        - --container-name
        - aai-schema-service
        - --container-name
        - aaf-cm
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: "{{ .Values.global.readinessRepository }}/{{ .Values.global.readinessImage }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        name: {{ include "common.name" . }}-readiness
# AAF config
      - name: {{ include "common.name" . }}-config
        image: {{ .Values.global.repository }}/{{.Values.aaf_init.image}}
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        volumeMounts:
        - mountPath: "/opt/app/osaaf"
          name: aai-graphgraph-volume
        command: ["bash","-c","exec /opt/app/aaf_config/bin/agent.sh"]
        env:
          - name: APP_FQI
            value: "{{ .Values.aaf_init.fqi }}"
          - name: aaf_locate_url
            value: "https://aaf-locate.{{ .Release.Namespace}}:8095"
          - name: aaf_locator_container
            value: "oom"
          - name: aaf_locator_container_ns
            value: "{{ .Release.Namespace }}"
          - name: aaf_locator_fqdn
            value: "{{ .Values.aaf_init.fqdn }}"
          - name: aaf_locator_app_ns
            value: "{{ .Values.aaf_init.app_ns }}"
          - name: DEPLOY_FQI
            value: "deployer@people.osaaf.org"
## Note: We want to put this in Secrets or at LEAST ConfigMaps
          - name: DEPLOY_PASSWORD
            value: "demo123456!"
# Note: want to put this on Nodes, evenutally
          - name: cadi_longitude
            value: "{{ .Values.aaf_init.cadi_longitude }}"
          - name: cadi_latitude
            value: "{{ .Values.aaf_init.cadi_latitude }}"
# Hello specific.  Clients don't don't need this, unless Registering with AAF Locator
          - name: aaf_locator_public_fqdn
            value: "{{.Values.global.aaf.public_fqdn}}"
      containers:
      - name: {{ include "common.name" . }}
        image: "{{ include "common.repository" . }}/{{ .Values.image }}"
        imagePullPolicy: {{ .Values.global.pullPolicy | default .Values.pullPolicy }}
        #        command: ["/bin/sh"]
        #        args: ["-c", "while true; do echo hello; sleep 500;done"]
        env:
        - name: LOCAL_USER_ID
          value: {{ .Values.global.config.userId | quote }}
        - name: LOCAL_GROUP_ID
          value: {{ .Values.global.config.groupId | quote }}
        volumeMounts:
        - mountPath: "/opt/app/osaaf"
          name: aai-graphgraph-volume
        - mountPath: /etc/localtime
          name: localtime
          readOnly: true
        - mountPath: /graphgraph/application.properties
          name: springapp-conf
          subPath: application.properties
          {{ $global := . }}
          {{ range $job := .Values.global.config.auth.files }}
        - mountPath: /graphgraph/etc/auth/{{ . }}
          name: auth-truststore-sec
          subPath: {{ . }}
          {{ end }}
        ports:
        - containerPort: 8453
        # disable liveness probe when breakpoints set in debugger
        # so K8s doesn't restart unresponsive container
        {{ if .Values.liveness.enabled }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.service.internalPort }}
          initialDelaySeconds: {{ .Values.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.liveness.periodSeconds }}
        {{ end }}
        resources:
{{ include "common.resources" . | indent 12 }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      {{- end -}}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
      volumes:
      - name: aai-graphgraph-volume
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-aai-graphgraph-pvc
      - name: aai-common-aai-auth-mount
        secret:
          secretName: aai-common-aai-auth
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: springapp-conf
        configMap:
         name: {{ include "common.fullname" . }}-springapp-configmap
      - name: auth-truststore-sec
        secret:
         secretName: aai-common-truststore
         items:
          {{ range $job := .Values.global.config.auth.files }}
           - key: {{ . }}
             path: {{ . }}
          {{ end }}
      restartPolicy: {{ .Values.restartPolicy }}
      imagePullSecrets:
      - name: "{{ include "common.namespace" . }}-docker-registry-key"
